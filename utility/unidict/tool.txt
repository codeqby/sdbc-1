
               北京铁路局字典管理系统工具使用说明

一. 制表系统(ctab)               
        ┌───┐    ┌───┐    ┌────┐    ┌────┐    ┌────┐
        │  数  │    │      │    │        │    │        │    │        │
        │  据  ├─→┤取 数 ├─→┤  合表  ├─→┤  制表  ├─→┤  看表  │
        │  库  │    │getdb │    │   mtab │    │  ctab  │    │  btab  │
        │      │    │      │    │        │    │        │    │        │
        └───┘    └───┘    └────┘    └────┘    └────┘
                            ↑              ↑              ↑      
                        ┌───┐      ┌───┐      ┌───┐            
                        │*.dic │      │*.mtb │      │ *.ctb│
                        └───┘      └───┘      └───┘                             

         ctab 使用说明                                     

         ctab  字典 < 文件  >output file

       输入     ┌───┐  输出    ┌───┐                
      ───→─┤ctab  ├───→─┤  表  │
      一维流    └───┘          └───┘ 
                    ↑             (宽度不变)                  
                ┌───┐  
                │dict  │
                └───┘                                                 


      字典说明

      例如: kyl-1.ctb

PSIZE=0
            旅     客     及     行     包     发     送     情     况  ($0  )
 $-14                                                                                 $y-$m-$d   $H:$M
-----------------------------------------------------------------------------------------------------------------------------
|   单   |   旅  客  发  送  人  数       |       |       |        |        |     发送行包  |     中转行包  |     到达行包  |
|        |--------------------------------|  中 转|  免票 |上车人数|下车人数|---------------|---------------|---------------|
|   位   |  直通 |  管内 |  市郊 |  发送  |       |       |        |        |  行李 |  包裹 |  行李 | 包裹  |  行李 | 包裹  |
|--------|-------|-------|-------|--------|-------|-------|--------|--------|-------|-------|-------|-------|-------|-------|
|        |   1   |   2   |   3   |   4    |   5   |   6   |   7    |   8    |   9   |  10   |   11  |   12  |   13  |   14  |
{                                                           
|--------|-------|-------|-------|--------|-------|-------|--------|--------|-------|-------|-------|-------|-------|-------|
|%0      |%0     |%0     |%0     |%0      |%0     |%0     |%0      |%0      |%0     |%0     |%0     |%0     |%0     |%0     |
}
-----------------------------------------------------------------------------------------------------------------------------

    说明

    字典中
      $数字: 全局填充字
      %数字: 填充字
      #: 注释
      $y: 年
      $m: 月
      $d: 日
      $H: 时
      $M: 分
      $PAGE: 页号
      $CWEEK: 星期
      PSIZE=页长, PSIZE=0 不换页  缺省 = 66
      LSIZE=行长, 缺省 = 512

    数据流中
     在变元表中每行第一个位置上出现

      \:原行输出，其后的内容直接输出，单独占一行。
      $: 强制退出
      $^L: 退出换页
      $8: 退出下移 8 行
      & : 引用分隔行
     分隔行
&0|------------| 不打印分割行，在数据中由&引用。
&1|------------| 每行分割
&5|------------| 5行分割
  
     循还体

{                                                           
|--------|-------|-------|-------|--------|-------|-------|--------|--------|-------|-------|-------|-------|-------|-------|
|%0      |%0     |%0     |%0     |%0      |%0     |%0     |%0      |%0      |%0     |%0     |%0     |%0     |%0     |%0     |
}
     表尾行
$|-------------|

     定长表

                 xxxxxxxxxxxxxxxxx
     -----------------------------------------
     |      |      |      |      |      |    |
     |------|------|------|------|------|----|
     | %0   | %0   | %0   | %0   | %0   |%0  |
     | %-1  | %-1  | %-1  | %-1  | %-1  |%-1 |
     | %0   | %0   | %0   | %0   | %0   |%0  |
     | %0   | %0   | %0   | %0   | %0   |%0  |
     | %0   | %0   | %0   | %0   | %0   |%0  |
     -----------------------------------------

      %0: 右对齐输出
      %-1: 左对齐输出
      %4: 输出 4 个字符右对齐
      %-4: 输出 4 个字符左对齐
      若宽度不够, 则输出 ???....

       用户可根据需要, 相应位置添充相应符号,

      属性定义

      ATTRIBUTEn=串
	n=0--9

       串中的转义字符: \xnn,  nn为十六进制数
			\E   Esc
                       \\, 代表 \
                       \n, \r, \t, \f 同 c 语言
                       其他, 可置 \ 不起作用


      例如: 

      ATTRIBUTE0=\Ee11
      ATTRIBUTE1=\Ee21
      ATTRIBUTE2=      
           .
           .
           .
           .
      ATTRIBUTE9 = 

      属性引用:

        ^[0......^[9，  ^[ 为'ESC'字符
        ^[数字: 在数据中引用属性, 对于不存在的属性不起作用.
                项尾^[数字引用一个尾属性

	INCLUDE=filename 将filename读到这个位置,文件所在的目录与字典相同.

为适合 WINDOWS 98 WORD 使用, 在数据中增加如下控制字:
#CTRLHEAD
....
....
....
#CTRLEND
将#CTRLHEAD语句和#CTRLEND语句之间的内容原封不动地输出,其行数与列数不与计算.
#CTRLTAIL=...........
将#CTRLTAIL=之后的内容(不超过80个字符)原封不动地输出,其列数不与计算.


二. 合表系统(mtab)               


                 f1   f15
                 ↓....↓                        二维  
       输入     ┌───┐    ┌───┐ 输出 ┌───┐                
      ───→─┤mtab  ├──┤ctab  ├─→─┤  表  │
                └───┘    └───┘      └───┘ 
                    ↑                       (宽度不变)                  
                ┌───┐  
                │*.mtb │
                └───┘                                                 

         mtab 使用说明                                     

         mtab -f字典 f1 f2...f15 < f0 

         mtab ... | ctab  字典 | btab

      mtab 字典说明

      例如: 

	%1,2   从第一个文件, 取二项输出
	%      循还节,对应变长表，每页循环。
	%0,1   从标准输入, 取一项输出
	%1,14  从第一个文件, 取 14 项输出
        %1,+4  从第一个文件跳过 4 项输出

        {4     循还 4 次
        %0,+4  从标准输入跳过 4 项
	%1,8
	%3,5
        }
        ABC    输出ABC
        #      注释

三. 表格浏览器      

     btab -y,x 文件名

     btab -y,x <文件名


      例如: 

       ┼: y,x 光标锁定处  

      ┌──────────────────┐                
      │    │     横    表      头         │
      ├──┼───────────────┤   
      │ 纵 │                              │
      │    │                              │
      │ 表 │                              │
      │    │                              │
      │ 头 │                              │
      └──────────────────┘ 

      表格浏览      

       右移: l, →
       左移: h, ←
       上下: PgUp, PgUn   半页
             ↑, ↓  一行
              k, j   一页
             空格下移一页
       退出: E, q, ^d


四. 字典说明

        编制应用软件时, 其运算结果通常以可打印的表格形式输出, 若对每
    张报表均有一段程序与之对应, 不但编程工作量大, 而且也不易维护和修
    改. 为改变这种状况, 现采用了字典方法: 即由用户按照一定的规则编写
    字典, 表格与字典需要你自己仔细地保持一一对应的关系. 程序根据字典
    的描述形成数据流, 通过制表器CTAB形成可打印的表格.
 
    以下说明适用于 getdb 和 pdb 二者都可调用 ctab 或mtab 

    1.  数据库表结构描述
	TABDESC=文件名
		需要描述文件的全路径名。
        描述文件格式：
		DATABASEAUTHFILE=数据库授权文件名。由SDBC定义和使用。
                                     该条目可以不写，由环境变量代替。
		KEYFILE=KEY.txt		数据库登录密钥文件，由SDBC使用
		DATABASE 数据库标签名。　明码，由SDBC定义和使用。
		TABNAME 数据库表名。　　包含属主。如：xcdba.tj18d
                SKIP number 。　　　　　计算项号时跳过的字段数，
　　　　　　　　　　　　　　　　　　　　前number个字段通常是一个唯一索引，确定一条记录。
		COLNUM number 。        本表有number个字段。
                以后是字段描述，每个字段占一行，总行数不超过COLNUM。格式如下：

                字段名　　数据类型（格式）
                字段名：数据库中的属性名。
                数据类型和格式：C语言的数据类型如下：
　　　　	char(n)　　　　字符型，长度n与数据库中的定义相同
		date(日期格式)　日期型，格式为year to day　,　year to min　,　year to sec　。
　　　　　　　　jul            日期型,year to day 内部为数字型，可以计算。
		minuts	       时间型，year to min，内部为数字型，可以计算。
		short		短整型　-32767 - 32767
		int		整型　＋－42亿
		long　　　　　　取决于系统，32位机同int,64位机为8字节。
		double		64位浮点。

    2.  字典格式说明                 

	()                
	算术运算符:           + - * / %        
	逻缉运算符:           = <= >= <> != & |  
	输出格式:             保留小数位数(缺省为加权四舍五入)
	舍入规则四舍五入(5),只舍(3),只入(4)(缺省为四舍五入)

	基本格式:     原则上每行一项,个别规则性强的可合并.
		      每行由两部分组成,前半部份为表达式, 由分号隔开的后半部份
		      为格式说明
              
	算术表达式规范:由项号和算术运算符,()组成.
		       项号由两种格式构成.第一种格式: 
       	               [标记,]{0,8}项号[a-zA-Z]{0,1}. 
       		       标记由字母数字构成,若含有 + - * / % , \ 
               	       应前置 \ 引导.

                      第二种格式: 浮点表达式,代表立即数

       逻缉表达式规范: 
        算术表达式 逻缉运算符 算术表达式 | 算术表达式 逻缉运算符 算术表达式  ...      

    2. 字典编写规则                      

        ① 基本运算符

            ()                
            算术运算符:         +, -, *, /, %  ( 优先级 )       
            逻缉运算符:         =, <=, >=, <>, !=, 
				&,| 
        			:?

        ② 基本格式

            每行由两部分组成,前半部份为表达式, 由分号隔开的后半部份
            为格式说明, '#'后可跟注释,如需打印#,可用\#.


            1. 算术表达式
    
               算术表达式可由三种最基本的表达式组成

               (1)    a1,a2,a3,a4,a5, n 尾标
                      ┃          ┃  ┃           
                      ┗━━┳━━┛  ┗━━━━━━━━┓
                            ┃                          ┃
                            ┃                          ┃
                            ┃                          ┃
                         索引标记                      项号           

                       索引标记: 由字母或数字构成, 若含有 + - * / % , \ 
                                 应前置 \ 引导.                  
                       项    号: 由数字构成.
                       尾    标: 由一个字母构成 a - z, A - Z.
               (2)    nL
                    字典用存储变量. 详见存储规则       
               (3) 浮点表达式, 代表立即数. 例: 0.5, -5e10.

            2. 条件表达式

            单行条件表达式：
               若e1, e2和e3是三个算术表达式, 则在条件表达式
                       e1?e2:e3
               e1的格式：变量或数值 操作符 变量或数值 逻辑操作符 ...
               中, 首先计算e1的值, 若非零(真), 则计算e2的值, 并且此值就是该表达      
               式的值; 否则, 计算e3的值, 并且此值就是该表达式的值. e2和e3仅有一
               个被求值.  e2 和 e3 含有格式说明.

            多行条件表达式：
                       条件表达式？
			条件为真的语句
                       ：
                        条件为假的语句
                       $
		       条件表达式？
			条件为真的语句
                       ：第二个条件表达式？       # else if，可以有多个
                        第二个条件为真的语句
		       ：                         # 可以没有
			条件为假的语句
                       $

	   条件表达式可以嵌套使用。	

            3. 输出格式规则

               若表达式后跟有分号, 则表明本行字典值要输出. 格式为 ;m.n
               其中: m 为保留小数位数
                     无n时m:为小数点左移位数.
                  n 为舍入规则
n: 0-- 遇0输出0 四舍五入.
   以下遇0输出空 
   1-- 向-舍入.
   2-- 向+舍入.
   3-- 向0舍入.
   4-- 只入.
   5-- 四舍五入.
   无- 小数点左移m位,四舍五入.  为加权四舍五入.
                例:
		     3450.495;2.5
		     3450.50

		     3450.495;2
		     34.50

		     3450.50;2
		     34.51

		    ;g float format
                    ;y: 年
                    ;m: 月
                    ;d: 日
                    ;w: 星期
                    ;Y: 年月日
                    ;j: 季度
		    ;l: 字符串打印小写
		    ;u: 字符串打印大写
                    ;n: 不打印

                    ;+m.n  输出需要+-号                        
                    ;0m    输出m位宽, 补前0
                    ; m    输出m位宽, 补空格
             基本格式之后跟其他字符将被打印出来, 行尾的&表示不换行.

     	    4. 字典日期

       		    D:  日期
       		    0D:  数据库日期 本月  几日
                    1D:  记录的日
                    2D:  当日的日 (程序日期)
                    3D:  当年的天数
                    4D:  程序指定的月份
                    6D:  内部日
                    7D:  季度天数

                日期表达式  

                
                    .\-1.,2D;   昨日日期
                    .L,2D;      月底日
                    . .,4D;     当日月份

        ③ 存储规则 
   
            字典具有变量存储功能. 要将某字典行的值存储, 可写成 nL=表达式.    
            (其中, n为正整数),  其中, nL即为变量,其中 0<= n <=9,若超过此
            值,则须用 LABN=n  加以说明. 此说明应单独占一行.


        ④ 缺省规则

            编写字典时, 索引标记部分的值均可省略, 若某个值缺省, 则其值为  
            前一次查找记录所使用的索引值, 依此类推.    

        ⑤ 几个完整字典行  

            LABN=m
            nL=A+B/C+1000.;      #  (即存储又输出)
            pL=E+nL              #         (存储不输出)
            A?B;:C-D;2.0          #         (若A为真, 则输出B, 否则输出C,
                                 #          输出格式为保留两位小数, 全舍)       

            注: 上例中 A,B,C,D,E 均为算术表达式. m,n,p为正整数. 
 
        ⑥ 字典特别说明


            表达式  项  操作符
            表达式  [; 格式]
                     ; 输出

               日期,单位,表名,标记,项号

              例如: 
              .,1000,kyl,101,1..14;
                               ↑
                             1 至 14 项输出

              .,1000,byb2,101,1..61=.,1000,yb2,101,1&&-,,qyb2,,1&&;
                               ↑                  ↑          ↑
                             1 至 61 项

                             ;ABC 输出 ABC
                             9++14;    9+10+11+12+13+14  之和输出

              赋值表达式
               .,1000,kyl,102,19=.,1000,kyl,102,18/17  第 19 项为第 18 项 / 第 17 项

        7)  
            对于带事务的数据库, 在pdb中可使用:
		COMMITNUM=50
	    要求pdb每50条记录提交一次, 缺省每100条提交一次.
                COMMITNUM=0
            pdb全部完成后提交.
     
            在pdb和getdb中, 可使用:
	    OUTFILE=filename
	    将输出送到filename中,用:
	    OUTFILE=
            将输出到标准输出.

五. cvtdate 使用说明    
        日期表达式：
		yyyy.mm.dd
		mm.dd
		mm.
		.dd
		dd
		 
                    .           当日
		    L           月底
		    -1          昨天
		    -1.L       上月月底
		    -1.12.31   去年年底	 
       程序运行：
           cvtdate [选项] 日期表达式


    cvtdate -j[参考日期] . : 本季度第几天数

    cvtdate -y[参考日期] . : 年

    cvtdate -d[参考日期] . : 日

    cvtdate -m[参考日期] . : 月

    cvtdate -M[参考日期] . : 月底

    cvtdate -D[参考日期] . : 从 1969-12-31 到今天的天数

    cvtdate -Y[参考日期] . : 从本年初到今天的天数

    cvtdate -u[参考日期] . : 年/月/日  (缺省格式)

    例:
    cvtdate -u2000.12.29 +100
    输出2000年12月29日后100天的日期

六. 摘数工具 getdb 使用说明 

     从数据库中读出数据, 形成流式文件

               	         **********
               	         * 数据库 *
               	         **********
                    	     ↓
       ┌───┐  摘数  ┌───┐   输出 ┌────┐                
       │*.dic ├───→┤getdb ├──→─┤流式文件│
       └───┘        └───┘        └────┘ 
                      
               
                                                               

     getdb   使用说明                                     

     getdb [日期] < 字典

      例如: 
       getdb  . <../dict/kyl-1.dic
                  ↑
                项号从第 4 项开始

七. pdb 使用说明 

     往数据库中写入数据, 也可用于摘数输出
    


                **********
                * 数据库 *
                **********
                    ↑                        
                    ↓
        数据    ┌───┐   输出 ┌────┐                
        ───→┤ pdb  ├──→─┤流式文件│
                └───┘        └────┘ 
                    ↑                        
                ┌───┐        
                │*.dic │
                └───┘                                                 

     pdb   使用说明                                     

     pdb 字典 日期 < 数据

      例如: 
       pdb ../dict/hj.dic<文件名

      字典 gdb 基本相同, 增加了赋值语句.

      例如: 
        .,1000,kyl,102,19=.,kyl,1000,102,17/18
                19 项 = 17项/18项, 不输出

        .,1000,kyl,102,1..14=
               从标准输入读入 14 项, 送入 1--14 项内

         15=
               从标准输入读入第 15 项

        .,1000,kyl,101,2t
                对第二个标记段进行合计, 采用内部专有算法 

     pdb  @字典 日期 < 数据
     引用zdsc对字典进行加工,详见下节.

midchk:                         #表间校验
midchk db tab  K date unit sub [id] <dict
dict:
	.,xb1,1..80>.,qxb1,1&&;	#auto match
	.,bxb2,1..80>=0.;	#
	\-1,qxb1,77=.,qxb1,68;	#yesterday

八.  字典生成器使用说明
	zdsc  maindict >dic
     maindict: 主字典文件名
     dic:      生成的字典, 供gdb, pdb用
     maindict的格式:
          for filename @1|@2
                         ^--^------此处可以指定各种分隔符, 与字典中相同.
.,@1,@2,101,1;
	  endfor
     其中, filename为辅字典名, 与主字典在同一目录下.
     for语句的@子句有几个分量,  filename中也有几个分量,
     各分量的分隔符与for语句中的分隔符相同,不得使用@[0-9].
     如:
 ft|yb2
 ft|yb3
 ft|yb4
 fx|yb2
 fx|yb3
 fx|yb4
    以上主辅字典产生的dic为:
 .,ft,yb2,101,1;
 .,ft,yb3,101,1;
 .,ft,yb4,101,1;
 .,fx,yb2,101,1;
 .,fx,yb3,101,1;
 .,fx,yb4,101,1;
	若filename为 - 取标准输入.
	若filename为 <!  ,随后的行为辅字典,直到! ,也可用其它字符作
        终结符.

若主字典为:
    for <! @1
ft
fx
!
    for fil2 @2
.,@1,@2,101,1..15;
    endfor
    endfor

fil2为:
yb2
yb3
yb4

则产生的dic为:

 .,ft,yb2,101,1..15;
 .,ft,yb3,101,1..15;
 .,ft,yb4,101,1..15;
 .,fx,yb2,101,1..15;
 .,fx,yb3,101,1..15;
 .,fx,yb4,101,1..15;

@标记可以进行子串替换, 如:
for file1 @1
OUTFILE=bs@1$11.sdf               注1
for file2 @2
.,@1,@2,1,1..15;
endfor
endfor
file1:
ft
fx
file2:
gb2
gb3

  则产生的dic为:
OUTFILE=bsft11.sdf
.,ft,gb2,1,1..15;
.,ft,gb3,1,1..15;
OUTFILE=bsfx11.sdf
.,fx,gb2,1,1..15;
.,fx,gb3,1,1..15;

注1:
    语句中bs@1$11.sdf, $为分隔符, 防止zdsc误认为@111,
$在结果中不出现, \ 具有同样效果, 如此处需用$或\, 可双写之.


for - @1
.
.
.
endfor
	显然，for 语句可以嵌套使用。

  替换字典来自标准输入, 可以用^L标志一个分组结束.

可以定义环境变量, 限程序内部使用
  PUTENV  MYENV=myval
定义了一个环境变量 MYENV 其内容为 myval
可以使用自己定义的或系统定义的环境变量:
....$(MYENV).....
其中$(MYENV)将被myval替换.

zdsc 与 midchk、gdb、pdb 联用：

   zdsc dict | midchk ...
   zdsc dict | gdb ...

   pdb @字典 日期            由zdsc对字典预处理

字典文件可以不存在，zdsc 将使用标准输入作为字典。字典文件名中的目录部分用做辅字典的目录。
辅字典的目录也可以由环境变量DICTDIR提供。

